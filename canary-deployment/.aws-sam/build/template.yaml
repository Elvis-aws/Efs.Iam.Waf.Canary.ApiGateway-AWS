AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Lambda Alias and stageVariables
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.9
    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  LambdaFunctionProd:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LambdaFunctionProd
      CodeUri: LambdaFunctionProd
      Handler: app.lambda_prod
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - AWSLambda_FullAccess
      AutoPublishAlias: live
    Metadata:
      SamResourceId: LambdaFunctionProd
  TokenAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TokenAuthorizerFunction
      CodeUri: TokenAuthorizerFunction
      Handler: app.authorize
    Metadata:
      SamResourceId: TokenAuthorizerFunction
  AuthorizersLambdaToken:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: LambdaAuthorizerToken
      Type: TOKEN
      RestApiId:
        Ref: RestApiProd
      IdentitySource: method.request.header.authorizationToken
      AuthorizerUri:
        Fn::Join:
        - ''
        - - 'arn:aws:apigateway:'
          - Ref: AWS::Region
          - :lambda:path/2015-03-31/functions/
          - Fn::GetAtt:
            - TokenAuthorizerFunction
            - Arn
          - /invocations
  AppFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: LambdaFunctionProd
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiProd}/*/GET/
  TokenAuthorizerFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: TokenAuthorizerFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiProd}/authorizers/${AuthorizersLambdaToken}
  LambdaLogGroupProd:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${LambdaFunctionProd}
      RetentionInDays: 1
  RestApiProd:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: RestApiProd
      ApiKeySourceType: HEADER
      Description: Lambda Token Authorizer REST API demo
      EndpointConfiguration:
        Types:
        - EDGE
  ApiGatewayResourceProd:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - RestApiProd
        - RootResourceId
      PathPart: lambda
      RestApiId:
        Ref: RestApiProd
  ApiGatewayMethodProd:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: AuthorizersLambdaToken
      HttpMethod: ANY
      Integration:
        ConnectionType: INTERNET
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - LambdaFunctionProd
              - Arn
            - /invocations
      OperationName: lambdaprod
      ResourceId:
        Ref: ApiGatewayResourceProd
      RestApiId:
        Ref: RestApiProd
  ProdDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethodProd
    Properties:
      RestApiId:
        Ref: RestApiProd
      Description: Production deployment
  Prod:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: ProdDeployment
      StageName: production
      Description: Prod Stage
      RestApiId:
        Ref: RestApiProd
      Variables:
        lambdaAlias: prodAlias
        prod_variable: This is stage variable for prod
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: lambda:*
            Resource:
            - Fn::GetAtt:
              - LambdaFunctionProd
              - Arn
Outputs:
  ProdUrl:
    Description: URL for Prod endpoint
    Value:
      Fn::Sub: https://${RestApiProd}.execute-api.${AWS::Region}.amazonaws.com/production
