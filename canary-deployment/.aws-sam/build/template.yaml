AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Lambda Alias and stageVariables
Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.9
    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  LambdaFunctionProd:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LambdaFunctionProd
      CodeUri: LambdaFunctionProd
      Handler: app.lambda_prod
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - CloudWatchFullAccess
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
    Metadata:
      SamResourceId: LambdaFunctionProd
  LambdaVersion1:
    DeletionPolicy: Delete
    Type: AWS::Lambda::Version
    Properties:
      FunctionName:
        Ref: LambdaFunctionProd
      Description: V1
  AliasLambdaFunctionProd:
    Type: AWS::Lambda::Alias
    DependsOn: LambdaFunctionProd
    Properties:
      FunctionName:
        Ref: LambdaFunctionProd
      FunctionVersion:
        Fn::GetAtt:
        - LambdaVersion1
        - Version
      Name: prodAlias
  LambdaFunctionProdaApiGatewayInvokeProd:
    Type: AWS::Lambda::Permission
    DependsOn: AliasLambdaFunctionProd
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: ${LambdaFunctionProd.Arn}:prodAlias
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiProd}/*/GET/*
  LambdaLogGroupProd:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${LambdaFunctionProd}
      RetentionInDays: 3
  LambdaLogStreamProd:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName:
        Ref: LambdaLogGroupProd
      LogStreamName:
        Ref: LambdaFunctionProd
  RestApiProd:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: RestApiProd
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      EndpointConfiguration:
        Types:
        - EDGE
  ApiGatewayResourceProd:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
        - RestApiProd
        - RootResourceId
      PathPart: lambda
      RestApiId:
        Ref: RestApiProd
  ApiGatewayMethodProd:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        ConnectionType: INTERNET
        Credentials:
          Fn::GetAtt:
          - ApiGatewayIamRole
          - Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}:${!stageVariables.lambdaAlias}/invocations
          - lambdaArn:
              Fn::GetAtt:
              - LambdaFunctionProd
              - Arn
      OperationName: lambdaprod
      ResourceId:
        Ref: ApiGatewayResourceProd
      RestApiId:
        Ref: RestApiProd
  ProdDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethodProd
    Properties:
      RestApiId:
        Ref: RestApiProd
      Description: Production deployment
  Prod:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: ProdDeployment
      StageName: production
      Description: Prod Stage
      RestApiId:
        Ref: RestApiProd
      Variables:
        lambdaAlias: prodAlias
        prod_variable: This is stage variable for prod
      MethodSettings:
      - ResourcePath: /lambda
        HttpMethod: GET
        MetricsEnabled: 'true'
        DataTraceEnabled: 'false'
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: ''
          Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: lambda:*
            Resource:
            - Fn::GetAtt:
              - LambdaFunctionProd
              - Arn
Outputs:
  ProdUrl:
    Description: URL for Prod endpoint
    Value:
      Fn::Sub: https://${RestApiProd}.execute-api.${AWS::Region}.amazonaws.com/production
