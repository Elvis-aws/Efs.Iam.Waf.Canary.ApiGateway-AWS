AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Lambda Alias and stageVariables


Globals:
  Function:
    Timeout: 30
    MemorySize: 128
    Runtime: python3.9
    Tracing: Active

  Api:
    TracingEnabled: True

Mappings:
  Deployment:
    eu-west-2:
      "Canary30": Canary10Percent30Minutes
      "Canary5": Canary10Percent5Minutes
      "Canary10": Canary10Percent10Minutes
      "Canary15": Canary10Percent15Minutes
      "Linear10": Linear10PercentEvery10Minutes
      "Linear1": Linear10PercentEvery1Minute
      "Linear2": Linear10PercentEvery2Minutes
      "Linear3": Linear10PercentEvery3Minutes
      "allAtOnce": AllAtOnce

#We are using the Canary10Percent5Minutes strategy, which means that traffic is shifted in two increments.
#In the first increment, only 10% of the traffic is shifted to the new Lambda version, and after 5 minutes,
#the remaining 90% is shifted.

#The Linear strategy means that traffic is shifted in batches every X minutes. For example, Linear10PercentEvery10Minutes
#will shift an additional 10% of traffic every 10 minutes

Resources:
############################################
########### SNS LAMBDA FUNCTION ############
############################################
  LambdaFunctionProd:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LambdaFunctionProd
      CodeUri: src/
      Handler: app.lambda_prod
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - AWSLambda_FullAccess
      AutoPublishAlias: live
      DeploymentPreference:
        Type: !FindInMap [ Deployment, !Ref AWS::Region, Canary5 ]
        #        Alarms:
        #          # A list of alarms that you want to monitor
        #          - !Ref AliasErrorMetricGreaterThanZeroAlarm
        #          - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
        Hooks:
          # Validation Lambda functions that are run before & after traffic shifting
          PreTraffic: !Ref PreTrafficLambdaFunction
          PostTraffic: !Ref PostTrafficLambdaFunction

  PreTrafficLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PreTrafficLambdaFunction
      CodeUri: src/
      Handler: app.lambda_pre_canary

  PostTrafficLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostTrafficLambdaFunction
      CodeUri: src/
      Handler: app.lambda_post_canary
############################################
############# LAMBDA LOG GROUP #############
############################################

  LambdaLogGroupProd:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${LambdaFunctionProd}
      RetentionInDays: 1

############################################
######### API GATEWAY API RESOURCE #########
############################################
  RestApiProd:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: RestApiProd
      ApiKeySourceType: HEADER
      Description: An API Gateway with a Lambda Integration
      EndpointConfiguration:
        Types:
          - EDGE
  ############################################
  ########## API GATEWAY RESOURCE ############
  ############################################
  ApiGatewayResourceProd:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApiProd.RootResourceId
      PathPart: lambda
      RestApiId: !Ref RestApiProd
  ############################################
  ######### API GATEWAY METHOD GET ##########
  ############################################
  ApiGatewayMethodProd:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        ConnectionType: INTERNET
        Credentials: !GetAtt ApiGatewayIamRole.Arn
        IntegrationHttpMethod: POST
        PassthroughBehavior: WHEN_NO_MATCH
        TimeoutInMillis: 29000
        Type: AWS_PROXY
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionProd.Arn}/invocations
      OperationName: lambdaprod
      ResourceId: !Ref ApiGatewayResourceProd
      RestApiId: !Ref RestApiProd
  ############################################
  ###### API GATEWAY DEPLOYMENT PROD #########
  ############################################
  ProdDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiGatewayMethodProd
    Properties:
      RestApiId: !Ref RestApiProd
      Description: Production deployment
  ############################################
  ######### API GATEWAY STAGE PROD ###########
  ############################################
  Prod:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref ProdDeployment
      StageName: production
      Description: Prod Stage
      RestApiId: !Ref RestApiProd
      Variables:
        lambdaAlias: prodAlias
        prod_variable: This is stage variable for prod
  ############################################
  ############### API GATEWAY ################
  ############################################
  ApiGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: '/'
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:*
                Resource:
                  - !GetAtt LambdaFunctionProd.Arn
  ############################################
  ################## OUT PUT #################
  ############################################
Outputs:
  ProdUrl:
    Description: URL for Prod endpoint
    Value: !Sub "https://${RestApiProd}.execute-api.${AWS::Region}.amazonaws.com/production"
  ###############################################